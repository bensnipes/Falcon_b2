version: 2
jobs:
  test_regression_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Running tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/regression_model/requirements.txt
            py.test -vv packages/regression_model/tests
  
  differential_tests:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Capturing previous model predictions
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/ml_api/diff_test_requirements.txt
            chmod +x packages/ml_api/tests/differential_tests/capture_model_predictions.py
      - run:
          name: Running differential tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r packages/ml_api/requirements.txt --use-feature=2020-resolver 
            py.test -vv packages/ml_api/tests -m  differential



  test_ml_api:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - py-deps-{{ checksum "packages/ml_api/requirements.txt"}}
      - run:
          name: Running tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip --use-feature=2020-resolver
            pip install -r packages/ml_api/requirements.txt --use-feature=2020-resolver
            py.test -vv packages/ml_api/tests -p no:warnings
            py.test -vv packages/ml_api/tests -m  differential
      - save_cache:
          key: py-deps-{{checksum "packages/ml_api/requirements.txt"}}
          paths:
            - "/venv"
  

  train_and_upload_regression_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Setup env
          command: |
          
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip --use-feature=2020-resolver
            pip install -r packages/regression_model/requirements.txt --use-feature=2020-resolver
      - run:
          name: Train-model
          command: |
            . venv/bin/activate
            chmod +x  packages/regression_model/train_pipeline.py
      - run:
          name: Publish Model to Gemfury
          command: |
             . venv/bin/activate
             chmod +x ./script/publish_model.sh
             ./script/publish_model.sh ./packages/      


  build_and_push_to_heroku_docker:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run: docker login --username=baahdocker --password=8238df19-2d14-4524-94d8-ea5bc67060b3 registry.heroku.com    
      - run:
          name: Heroku container login
          command: |
            echo Baah@2019 | docker login --username baahdocker --password-stdin             
      - run:
          name: Setup Heroku CLI
          command: |
            wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - run: 
          name: Build and Push Image
          command: |
            make build-ml-api-heroku push-ml-api-heroku
      - run: 
          name: Release to Heroku
          command: |
            heroku container:release web --app=falcon1-ml
            curl -nX POST https://api.heroku.com/apps \                   

workflows:
  version: 2
  test-all:
    jobs:
      - test_regression_model
      - test_ml_api
      - differential_tests
      - train_and_upload_regression_model:
          requires:
            - test_ml_api
            - test_regression_model
            - differential_tests
      - build_and_push_to_heroku_docker:
          requires:
            - train_and_upload_regression_model
         